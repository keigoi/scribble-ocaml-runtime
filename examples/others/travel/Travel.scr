module travel.Travel;

type <ocaml> "int" from "stdlib" as Int;
type <ocaml> "string" from "stdlib" as String;
type <ocaml> "string" from "stdlib" as Date;

global protocol TravelAgency(role C, role A, role S) {
  rec LOOP {
    choice at C {
      Query(String) from C to A;
      Price(Int) from A to C;
      Info(String) from A to S;
      continue LOOP;
    } or {
      choice at C {
        Accept() from C to A;
        Accept() from A to S;
        Address(String) from C to S;
        (Date) from S to C;
      } or {
        Reject() from C to A;
        Reject() from A to S;
      }
    }
  }
}

//$ bin/scribblec-f17.sh scribble-f17/src/test/scrib/f17/paper/Sec4.scr -f17 TravelAgency


module f17.paper.Sec4;

type <java> "java.lang.String" from "rt.jar" as String;
type <java> "java.lang.Integer" from "rt.jar" as Int;


explicit global protocol TravelAgency_Sec4(role C, role A, role S)
{
	connect C to A;
	do Nego(C, A, S);
}

aux global protocol Nego(role C, role A, role S)
{
	choice at C
	{
		query(String) from C to A;
		quote(Int) from A to C;
		do Nego(C, A, S);
	}
	or  // Flattened nested choices to fit core syntax
	{
		accpt() from C to A;
		connect A to S;
		port(Int) from S to A;
		port(Int) from A to C;
		pay(String) connect C to S;
		confirm(Int) from S to C;
	}
	or
	{
		reject() from C to A;
	}
}


explicit global protocol TravelAgency2(role C, role A, role S)
{
	connect C to A;
	do Nego2(C, A, S);
}

aux global protocol Nego2(role C, role A, role S)
{
	choice at C
	{
		query(String) from C to A;
		quote(Int) from A to C;
		do Nego2(C, A, S);
	}
	or
	{
		accpt() from C to A;
		connect A to S;
		port(p:Int) from S to A; @"open=C"    // FIXME: open=p:C
		port(p) from A to C;
		//pay(String) connect C to S; @"port=p"  // FIXME
		connect C to S; @"port=p"
		pay(String) from C to S;
		confirm(Int) from S to C;
	}
	or
	{
		reject() from C to A;
	}
}
